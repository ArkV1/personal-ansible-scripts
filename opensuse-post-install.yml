---
- name: Configure Single Password Prompt for Encrypted Root
  hosts: all
  become: true
  vars:
    root_key_path: "/etc/keys/enc.key"

  pre_tasks:
    - name: Detect encrypted root partition
      shell: |
        lsblk -pnl | grep 'crypt.*/$' | awk '{print $2}' | \
        while read device; do
          cryptsetup status $device | grep 'device:' | awk '{print $2}'
        done
      register: detect_root
      changed_when: false
      tags: check_encryption

    - name: Verify encrypted root was found
      fail:
        msg: "No encrypted root partition detected!"
      when: detect_root.stdout == ''
      tags: check_encryption

    - name: Set encrypted root partition fact
      set_fact:
        encrypted_root_partition: "{{ detect_root.stdout }}"
      tags: check_encryption

    - name: Display detected encrypted root partition
      debug:
        msg: "Detected encrypted root partition: {{ encrypted_root_partition }}"
      tags: check_encryption

  tasks:
    - name: Create keys directory
      file:
        path: "/etc/keys"
        state: directory
        mode: '0700'
        owner: root
        group: root

    - name: Create root key file
      file:
        path: "{{ root_key_path }}"
        state: touch
        mode: '0600'
        owner: root
        group: root

    - name: Generate random key data
      shell: dd if=/dev/urandom of={{ root_key_path }} bs=1024 count=1
      args:
        creates: "{{ root_key_path }}"

    - name: Get UUID of encrypted partition
      shell: blkid -s UUID -o value {{ encrypted_root_partition }}
      register: partition_uuid
      changed_when: false

    - name: Add key file to LUKS
      expect:
        command: "cryptsetup luksAddKey {{ encrypted_root_partition }} {{ root_key_path }}"
        responses:
          "Enter any existing passphrase:": "{{ lookup('ansible.builtin.password', '/dev/tty', prompt='Enter your current LUKS passphrase') }}"
      no_log: true

    - name: Configure crypttab
      lineinfile:
        path: /etc/crypttab
        regexp: "^cr_{{ encrypted_root_partition | basename }}"
        line: "cr_{{ encrypted_root_partition | basename }} UUID={{ partition_uuid.stdout }} {{ root_key_path }} x-initrd.attach"
        state: present

    - name: Create dracut configuration directory
      file:
        path: /etc/dracut.conf.d
        state: directory
        mode: '0755'

    - name: Configure dracut to include key file
      copy:
        dest: /etc/dracut.conf.d/99-root-key.conf
        content: 'install_items+=" {{ root_key_path }} "'
        mode: '0644'

    - name: Rebuild initrd
      command: dracut -f
      register: dracut_result
      changed_when: dracut_result.rc == 0

    - name: Verify initrd was rebuilt successfully
      debug:
        msg: "initrd was rebuilt successfully"
      when: dracut_result.rc == 0
